/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RecordStringNever } from "./recordstringnever";
import { Expose, Type } from "class-transformer";

export class AppConfigAuthConfigurationGoogle extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "clientId" })
    clientId: string;
}

export class AppConfigAuthConfiguration extends SpeakeasyBase {
    /**
     * Construct a type with a set of properties K of type T
     */
    @SpeakeasyMetadata()
    @Expose({ name: "anonymous" })
    @Type(() => RecordStringNever)
    anonymous?: RecordStringNever;

    @SpeakeasyMetadata()
    @Expose({ name: "google" })
    @Type(() => AppConfigAuthConfigurationGoogle)
    google?: AppConfigAuthConfigurationGoogle;

    /**
     * Construct a type with a set of properties K of type T
     */
    @SpeakeasyMetadata()
    @Expose({ name: "nickname" })
    @Type(() => RecordStringNever)
    nickname?: RecordStringNever;
}

export class AppConfig extends SpeakeasyBase {
    /**
     * Readable name for an application. Must be unique within an organization.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "appName" })
    appName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "authConfiguration" })
    @Type(() => AppConfigAuthConfiguration)
    authConfiguration: AppConfigAuthConfiguration;
}
